// <auto-generated />
using System;
using KuCloud.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KuCloud.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240408193708_AddAuditInfo")]
    partial class AddAuditInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KuCloud.Core.ContributorAggregate.Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_contributors");

                    b.ToTable("contributors", (string)null);
                });

            modelBuilder.Entity("KuCloud.Core.ContributorAggregate.Contributor", b =>
                {
                    b.OwnsOne("KuCloud.Core.AuditInfo", "AuditInfo", b1 =>
                        {
                            b1.Property<int>("ContributorId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("CreationTime")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("Creator")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("CreatorId")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<bool>("IsDelete")
                                .HasColumnType("boolean");

                            b1.Property<DateTime?>("ModifiedTime")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("ContributorId");

                            b1.ToTable("contributors");

                            b1.ToJson("audit_info");

                            b1.WithOwner()
                                .HasForeignKey("ContributorId")
                                .HasConstraintName("fk_contributors_contributors_id");
                        });

                    b.OwnsOne("KuCloud.Core.ContributorAggregate.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<int>("ContributorId")
                                .HasColumnType("integer");

                            b1.HasKey("ContributorId");

                            b1.ToTable("contributors");

                            b1.ToJson("phone_number");

                            b1.WithOwner()
                                .HasForeignKey("ContributorId")
                                .HasConstraintName("fk_contributors_contributors_id");
                        });

                    b.Navigation("AuditInfo")
                        .IsRequired();

                    b.Navigation("PhoneNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
